# -*- mode: ruby -*-
# vi: set ft=ruby :
#

begin
  vbox_version = `VBoxManage --version`
rescue
  vbox_version = 0
end

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  box = ENV['VAGRANT_BOX'] || "nixos/nixos-16.09-x86_64"

  machines = [
    { 'name' => 'vagrant-obor-box',
      'ip' =>  '192.168.56.209' 
    }
  ]

  machines.each do |item|
    config.vm.define 'vagrant-obor-box' do |machine|

      if Vagrant.has_plugin?("vagrant-vbguest")
        config.vbguest.auto_update = false
      end

      machine.vm.box = box
      machine.vm.hostname = 'vagrant-obor-box'
      machine.vm.network "private_network", ip: '192.168.56.209'
      machine.ssh.insert_key = false

      machine.vm.provider "virtualbox" do |vb|
        vb.customize ["modifyvm", :id, "--cpus", "4"]
        vb.memory = "4096" # to compile mesos we need > 2GB of RAM
        # https://github.com/hashicorp/otto/issues/423#issuecomment-186076403
        vb.linked_clone = true if Vagrant::VERSION =~ /^1.9/ 
        vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
        if vbox_version.to_f >= 5.0 and  Vagrant::Util::Platform.linux?
          vb.customize ['modifyvm', :id, '--paravirtprovider', 'kvm']
        end
        # https://www.virtualbox.org/manual/ch05.html#iocaching
        vb.customize [
          "storagectl", :id, 
          "--name", "IDE Controller",
          "--hostiocache", "off"
        ]
      end

      # vboxsf is not available on our vagrant nixos boxes
      # we don't need it anyway, as we will sync using rsync instead
      machine.vm.synced_folder '.', '/vagrant', disabled: true

      machine.vm.provision "shell", inline: <<-SHELL
        sudo rm -rf /old-root
        sudo rm -rf /tmp-nixos
        sudo rm -f /etc/nixos/result
        openssl version >/dev/null 2>/dev/null|| sudo nix-env -Q --quiet -i openssl >/dev/null
        ls -l /etc/ca-bundle.crt >/dev/null 2>&1 || sudo nix-env -Q --quiet -i cacert >/dev/null
        which git >/dev/null 2>&1 || sudo nix-env -Q --quiet -i git >/dev/null
        sudo CURL_CA_BUNDLE=/etc/ca-bundle.crt git config --global user.email "root@localhost"
        sudo CURL_CA_BUNDLE=/etc/ca-bundle.crt git config --global user.name "root at localhost"
        sudo rm -rf /nixpkgs ; sudo CURL_CA_BUNDLE=/etc/ca-bundle.crt git clone -q https://github.com/Azulinho/mynixpkgs.git /nixpkgs
        cd /nixpkgs && sudo CURL_CA_BUNDLE=/etc/ca-bundle.crt git checkout local_release_1703
        which wget >/dev/null 2>&1|| sudo nix-env -Q --quiet -i wget >/dev/null
        cd /tmp
        sudo wget -q --no-check-certificate -c --header='Cookie: oraclelicense=accept-securebackup-cookie' http://download.oracle.com/otn-pub/java/jdk/8u111-b14/jdk-8u111-linux-x64.tar.gz || echo
        sudo nix-store -Q --quiet  --add-fixed sha256 jdk-8u111-linux-x64.tar.gz >/dev/null
        sudo wget -q --no-check-certificate -c --header='Cookie: oraclelicense=accept-securebackup-cookie' http://download.oracle.com/otn-pub/java/jdk/8u121-b13/e9e7ea248e2c4826b92b3f075a80e441/jdk-8u121-linux-x64.tar.gz || echo
        sudo nix-store -Q --quiet --add-fixed sha256 jdk-8u121-linux-x64.tar.gz >/dev/null
        sudo wget -q --no-check-certificate -c --header='Cookie: oraclelicense=accept-securebackup-cookie' http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz || echo
        sudo nix-store -Q --quiet  --add-fixed sha256 jdk-8u131-linux-x64.tar.gz >/dev/null
        sudo CURL_CA_BUNDLE=/etc/ca-bundle.crt nixos-rebuild build -Q -I nixpkgs=/nixpkgs/ 2>&1 | tail 
        sudo CURL_CA_BUNDLE=/etc/ca-bundle.crt nixos-rebuild switch -Q -I nixpkgs=/nixpkgs/ 2>&1 | tail
      SHELL
    end
  end
end
